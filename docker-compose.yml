version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: crowe-lang-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: crowelang
      MONGO_INITDB_ROOT_PASSWORD: crowe-secure-2024
      MONGO_INITDB_DATABASE: crowelang
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb-init.js:/docker-entrypoint-initdb.d/init.js:ro
    ports:
      - "27017:27017"
    networks:
      - crowe-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: crowe-lang-redis
    restart: unless-stopped
    command: redis-server --requirepass crowe-redis-2024
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - crowe-network

  # Backend API Server
  backend:
    build:
      context: ./crowelang-backend
      dockerfile: Dockerfile
    container_name: crowe-lang-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://crowelang:crowe-secure-2024@mongodb:27017/crowelang?authSource=admin
      - REDIS_URL=redis://:crowe-redis-2024@redis:6379
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - COINBASE_COMMERCE_API_KEY=${COINBASE_COMMERCE_API_KEY}
      - COINBASE_COMMERCE_WEBHOOK_SECRET=${COINBASE_COMMERCE_WEBHOOK_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=7d
      - LICENSE_ENCRYPTION_KEY=${LICENSE_ENCRYPTION_KEY}
      - FRONTEND_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - crowe-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Dashboard
  admin:
    build:
      context: ./crowelang-admin
      dockerfile: Dockerfile
    container_name: crowe-lang-admin
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
      - NEXT_PUBLIC_APP_NAME=Crowe-Lang Admin
      - NEXT_PUBLIC_APP_URL=http://localhost:3001
    ports:
      - "3001:3001"
    depends_on:
      - backend
    networks:
      - crowe-network

  # Stripe CLI for webhook forwarding
  stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: crowe-lang-stripe-cli
    restart: unless-stopped
    environment:
      - STRIPE_API_KEY=${STRIPE_SECRET_KEY}
    command: listen --forward-to http://backend:3000/api/webhooks/stripe
    depends_on:
      - backend
    networks:
      - crowe-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: crowe-lang-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - admin
    networks:
      - crowe-network

  # MCP Server with Stripe integration
  mcp-server:
    image: node:18-alpine
    container_name: crowe-lang-mcp
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./mcp-server:/app
    environment:
      - NODE_ENV=production
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - API_BASE_URL=http://backend:3000/api
    command: node server.js
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - crowe-network

networks:
  crowe-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local