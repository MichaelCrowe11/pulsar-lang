# CroweCode Platform - Alertmanager Configuration
# Routes alerts to appropriate channels (Slack, Email, PagerDuty)

global:
  smtp_smarthost: '${SMTP_HOST:-localhost:587}'
  smtp_from: '${SMTP_FROM:-alerts@crowecode.com}'
  smtp_auth_username: '${SMTP_USER}'
  smtp_auth_password: '${SMTP_PASSWORD}'

route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 1h
  receiver: 'web.hook'
  routes:
    # Critical alerts go to PagerDuty and Slack
    - match:
        severity: critical
      receiver: critical-alerts
      group_wait: 10s
      repeat_interval: 5m

    # Warning alerts go to Slack only
    - match:
        severity: warning
      receiver: warning-alerts
      group_wait: 30s
      repeat_interval: 30m

    # AI service specific alerts
    - match:
        service: ai-worker
      receiver: ai-team-alerts

    # Database alerts
    - match_re:
        alertname: PostgreSQL.*|Redis.*
      receiver: database-alerts

    # Security alerts
    - match_re:
        alertname: TooManyFailedLogins|SuspiciousActivity
      receiver: security-alerts

receivers:
  # Default webhook receiver
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://localhost:5001/'

  # Critical alerts - PagerDuty + Slack + Email
  - name: 'critical-alerts'
    pagerduty_configs:
      - service_key: '${PAGERDUTY_SERVICE_KEY}'
        description: 'CroweCode Platform Critical Alert: {{ .GroupLabels.alertname }}'
        details:
          firing: '{{ .Alerts.Firing | len }}'
          resolved: '{{ .Alerts.Resolved | len }}'

    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts-critical'
        title: 'CroweCode Platform Critical Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'danger'
        fields:
          - title: 'Alertname'
            value: '{{ .GroupLabels.alertname }}'
            short: true
          - title: 'Instance'
            value: '{{ .GroupLabels.instance }}'
            short: true
          - title: 'Severity'
            value: '{{ .GroupLabels.severity }}'
            short: true

    email_configs:
      - to: '${ALERT_EMAIL_CRITICAL}'
        subject: 'CroweCode Platform Critical Alert: {{ .GroupLabels.alertname }}'
        body: |
          Alert: {{ .GroupLabels.alertname }}
          Severity: {{ .GroupLabels.severity }}
          Instance: {{ .GroupLabels.instance }}

          {{ range .Alerts }}
          Summary: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          {{ end }}

  # Warning alerts - Slack only
  - name: 'warning-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#alerts-warning'
        title: 'CroweCode Platform Warning'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'warning'

  # AI team alerts
  - name: 'ai-team-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#ai-team'
        title: 'AI Service Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'

  # Database team alerts
  - name: 'database-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#database-team'
        title: 'Database Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'

    email_configs:
      - to: '${ALERT_EMAIL_DATABASE}'
        subject: 'Database Alert: {{ .GroupLabels.alertname }}'
        body: |
          Database Alert Details:

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          {{ end }}

  # Security team alerts
  - name: 'security-alerts'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_URL}'
        channel: '#security-alerts'
        title: 'Security Alert - Immediate Action Required'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'danger'

    email_configs:
      - to: '${ALERT_EMAIL_SECURITY}'
        subject: 'SECURITY ALERT: {{ .GroupLabels.alertname }}'
        body: |
          SECURITY ALERT - IMMEDIATE ACTION REQUIRED

          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt }}
          {{ end }}

# Inhibit rules - prevent spam during outages
inhibit_rules:
  # If a service is down, don't alert on high error rates for that service
  - source_match:
      alertname: ServiceDown
    target_match:
      alertname: HighErrorRate
    equal: ['instance']

  # If disk is critically full, don't alert on regular disk warnings
  - source_match:
      alertname: CriticalDiskSpace
    target_match:
      alertname: LowDiskSpace
    equal: ['instance']

  # If PostgreSQL is down, don't alert on slow queries
  - source_match:
      alertname: PostgreSQLDown
    target_match_re:
      alertname: PostgreSQL.*
    equal: ['instance']

# Templates for custom message formatting
templates:
  - '/etc/alertmanager/templates/*.tmpl'